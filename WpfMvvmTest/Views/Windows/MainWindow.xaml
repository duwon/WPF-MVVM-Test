<Window
    x:Class="WpfMvvmTest.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ViewModels="clr-namespace:WpfMvvmTest.ViewModels"
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:WpfMvvmTest.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:WpfMvvmTest"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="{Binding Title}"
    Width="800"
    Height="450"
    d:DataContext="{d:DesignInstance Type=ViewModels:MainViewModel}"
    mc:Ignorable="d">

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolToVisibilityConverter
            x:Key="ReversBoolToVisibilityConverter"
            FalseValue="Visible"
            TrueValue="Collapsed" />
    </Window.Resources>

    <Grid>
        <materialDesign:DrawerHost
            x:Name="DrawerHost"
            BorderBrush="{DynamicResource MaterialDesignDivider}"
            BorderThickness="2"
            BottomDrawerBackground="{DynamicResource SecondaryHueLightBrush}"
            BottomDrawerCornerRadius="20 20 0 0"
            IsRightDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}"
            OpenMode="Standard">


            <materialDesign:DrawerHost.RightDrawerContent>
                <StackPanel Width="150" Margin="0,16,0,16">
                    <TextBlock
                        Margin="4"
                        HorizontalAlignment="Center"
                        Text="THE RIGHT STUFF" />

                    <Button
                        Margin="4"
                        HorizontalAlignment="Center"
                        Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                        CommandParameter="{x:Static Dock.Right}"
                        Content="CLOSE"
                        Style="{StaticResource MaterialDesignFlatButton}" />
                </StackPanel>
            </materialDesign:DrawerHost.RightDrawerContent>


            <Grid
                HorizontalAlignment="Center"
                VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" MinWidth="350px" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Button
                    Width="80"
                    HorizontalAlignment="Right"
                    Content="Search" />
                <ToggleButton
                    x:Name="MenuToggleButton"
                    HorizontalAlignment="Left"
                    IsChecked="False"
                    Style="{StaticResource MaterialDesignSwitchSecondaryToggleButton}"
                    ToolTip="MaterialDesignSwitchSecondaryToggleButton" />
                <DataGrid
                    x:Name="MemberDataGrid"
                    Grid.Row="1"
                    Margin="0,10,0,0"
                    AutoGenerateColumns="False"
                    IsReadOnly="True"
                    ItemsSource="{Binding Members}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="SelectionChanged">
                            <b:InvokeCommandAction Command="{Binding SelectionChangedCommand}" PassEventArgsToCommand="True" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}" Header="Name" />
                        <DataGridTextColumn Binding="{Binding Phone, Mode=TwoWay}" Header="Phone" />
                        <DataGridTextColumn Binding="{Binding RegDate, StringFormat=\{0:d\}}" Header="Regested Date" />
                        <DataGridCheckBoxColumn Binding="{Binding IsUse, Mode=TwoWay}" Header="Use" />
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel
                    Grid.Column="1"
                    Margin="0,0,5,0"
                    HorizontalAlignment="Right"
                    Orientation="Horizontal">
                    <Button
                        x:Name="NewButton"
                        Width="80"
                        Command="{Binding NewCommand}"
                        Content="New"
                        Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
                    <Button
                        x:Name="EditButton"
                        Width="80"
                        Margin="5,0,0,0"
                        Command="{Binding EditCommand}"
                        Content="Edit"
                        Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
                    <Button
                        x:Name="DeleteButton"
                        Width="80"
                        Margin="5,0,0,0"
                        Command="{Binding DeleteCommand}"
                        Content="Delete"
                        Visibility="{Binding IsEditing, Converter={StaticResource ReversBoolToVisibilityConverter}}" />
                    <Button
                        x:Name="SaveButton"
                        Width="80"
                        Command="{Binding SaveCommand}"
                        Content="Save"
                        Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Button
                        x:Name="CancelButton"
                        Width="80"
                        Margin="5,0,0,0"
                        Command="{Binding CancelCommand}"
                        Content="Cancel"
                        Visibility="{Binding IsEditing, Converter={StaticResource BoolToVisibilityConverter}}" />
                </StackPanel>

                <Grid
                    x:Name="DetailGrid"
                    Grid.Row="1"
                    Grid.Column="1"
                    Height="187"
                    Margin="0,10,0,0"
                    VerticalAlignment="Top"
                    IsEnabled="{Binding IsEditing}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*" />
                        <ColumnDefinition Width="0.7*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Border Margin="4" Background="Gray">
                        <TextBlock
                            Margin="4,0,0,0"
                            Foreground="White"
                            Text="Id" />
                    </Border>
                    <TextBlock
                        x:Name="Id"
                        Grid.Column="1"
                        Margin="4"
                        Text="{Binding EditMember.Id}" />
                    <Border
                        Grid.Row="1"
                        Margin="4"
                        Background="Gray">
                        <TextBlock
                            Margin="4,0,0,0"
                            Foreground="White"
                            Text="Name" />
                    </Border>
                    <TextBox
                        x:Name="Name"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="4"
                        Text="{Binding EditMember.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Border
                        Grid.Row="2"
                        Margin="4"
                        Background="Gray">
                        <TextBlock
                            Margin="4,0,0,0"
                            Foreground="White"
                            Text="Phone" />
                    </Border>
                    <TextBox
                        x:Name="Phone"
                        Grid.Row="2"
                        Grid.Column="1"
                        Margin="4"
                        Text="{Binding EditMember.Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <Border
                        Grid.Row="3"
                        Margin="4"
                        Background="Gray">
                        <TextBlock
                            Margin="4,0,0,0"
                            Foreground="White"
                            Text="Registed Date" />
                    </Border>
                    <TextBlock
                        x:Name="RegDate"
                        Grid.Row="3"
                        Grid.Column="1"
                        Margin="4"
                        Text="{Binding EditMember.RegDate, StringFormat=\{0:d\}}" />
                    <Border
                        Grid.Row="4"
                        Margin="4"
                        Background="Gray">
                        <TextBlock
                            Margin="4,0,0,0"
                            Foreground="White"
                            Text="Use" />
                    </Border>
                    <CheckBox
                        x:Name="IsUse"
                        Grid.Row="4"
                        Grid.Column="1"
                        Margin="4"
                        IsChecked="{Binding EditMember.IsUse, Mode=TwoWay}" />
                </Grid>

                <Grid
                    x:Name="MultiplierGrid"
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="0,207,0,0">
                    <Grid.DataContext>
                        <ViewModels:MultiplierViewModel x:Name="ViewModel" />
                    </Grid.DataContext>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="0.5*" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock
                        x:Name="Title"
                        Grid.Row="0"
                        Grid.ColumnSpan="2"
                        Margin="4"
                        HorizontalAlignment="Center"
                        Text="2 곱하기 출력" />
                    <TextBlock
                        x:Name="Num1Title"
                        Grid.Row="1"
                        Grid.Column="0"
                        HorizontalAlignment="Center"
                        Text="숫자 입력" />
                    <TextBlock
                        x:Name="Num2Title"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Center"
                        Text="출력" />
                    <TextBox
                        x:Name="Num1"
                        Grid.Row="2"
                        Grid.Column="0"
                        Margin="4"
                        Text="{Binding MultiModel.Num1, UpdateSourceTrigger=PropertyChanged}" />
                    <TextBox
                        x:Name="Num2"
                        Grid.Row="2 "
                        Grid.Column="1"
                        Margin="4"
                        IsEnabled="False"
                        Text="{Binding MultiModel.Num2, UpdateSourceTrigger=PropertyChanged}" />
                </Grid>
            </Grid>
        </materialDesign:DrawerHost>
    </Grid>
</Window>
